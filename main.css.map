{"version":3,"sources":["webpack:///./src/app/components/Cell.svelte","webpack:///./src/app/components/Grid.svelte","webpack:///./src/app/components/App.svelte"],"names":[],"mappings":"AAUE,gBAAG,gBACgB,CAClB,qBAEM,UACM,CACX,WAAY,CACZ,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,iBAAkB,CACnB,sBAEO,sBACiB,CACxB,uBAEQ,iBACW,CAClB,KAAM,CACN,MAAO,CACP,aAAc;AA9BlB,y7CAAy7C,C;ACsBv7C,kCAAO,wBACoB,CAC1B,+BAEG,UACS,CACX,WAAY,CACZ,6BAA8B,CAC9B,4BAA6B,CAC9B,6CAEiB,2BACY,CAC7B,gDAEoB,0BACQ;AAtC/B,i2DAAi2D,C;ACkC/1D,qBAAO,aACS,CACd,WAAY;AApChB,ikDAAikD,C","file":"main.css","sourcesContent":["<script lang=\"ts\">;\nexport let cell;\n</script>\n\n<div class=\"cell\" class:block={!cell} on:mousedown>\n  <div class=\"number\">{cell?.number ?? \"\"}</div>\n  <div class=\"value\">{cell?.value ?? \"\"}</div>\n</div>\n\n<style>\n  * {\n    user-select: none;\n  }\n\n  .cell {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n  }\n\n  .block {\n    background-color: black;\n  }\n\n  .number {\n    position: absolute;\n    top: 0;\n    left: 0;\n    font-size: 75%;\n  }\n</style>\n","<script lang=\"ts\">import range from \"lodash/range\";\nimport { Crossword } from \"../crossword\";\nimport Cell from \"./Cell.svelte\";\nexport let crossword = new Crossword(5, 5);\nfunction toggleCell(row, col) {\n    crossword.toggleCell(row, col);\n    crossword = crossword;\n}\n</script>\n\n<table>\n  {#each range(0, crossword.rows) as r}\n    <tr>\n      {#each range(0, crossword.cols) as c}\n        <td on:mousedown={() => toggleCell(r, c)}>\n          <Cell cell={crossword.cells[r][c]} />\n        </td>\n      {/each}\n    </tr>\n  {/each}\n</table>\n\n<style>\n  table {\n    border-collapse: collapse;\n  }\n\n  td {\n    width: 30px;\n    height: 30px;\n    border-bottom: solid black 1px;\n    border-right: solid black 1px;\n  }\n\n  td:first-of-type {\n    border-left: solid black 1px;\n  }\n\n  tr:first-of-type td {\n    border-top: solid black 1px;\n  }\n</style>\n","<script lang=\"ts\">import Grid from \"./Grid.svelte\";\n;\nimport { Crossword } from \"../crossword\";\nconst input = BigInt(1442);\nlet result;\nlet crossword = new Crossword(15, 15);\nconst worker = new Worker(\"worker.js\");\nworker.addEventListener(\"message\", (event) => {\n    switch (event.data.kind) {\n        case \"solution\":\n            result = event.data.output;\n            break;\n        default:\n            break;\n    }\n});\nconst solve = () => {\n    const entries = [...crossword.across, ...crossword.down].map((entry) => entry.map((cell) => cell.id));\n    const msg = {\n        kind: \"query\",\n        input: entries,\n    };\n    worker.postMessage(msg);\n};\n</script>\n\n<main>\n  <div class=\"wrap\">\n    <button on:click={solve}>Click me</button>\n    <p>{result ?? `What is ${input} squared?`}</p>\n    <Grid bind:crossword />\n  </div>\n</main>\n\n<style>\n  .wrap {\n    margin: 0 auto;\n    width: 600px;\n  }\n</style>\n"],"sourceRoot":""}